name: sync

on:
  push:
    branches:
      - master
      - main
  schedule:
    - cron: "30 5 * * 1"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  vscode-image:
    runs-on: ubuntu-latest
    # strategy:
    #   max-parallel: 4
    #   matrix:
    #     python-version: [3.9]

    steps:
      - uses: actions/checkout@v2
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        # 将GTIHUB的信息都打印出来，后面的脚本可以使用这些信息，例如后面的镜像TAG用的就是这里面的commitid
        run: echo "Hello ${{ github.event.commits[0].id }}"
      - name: Login docker hub
        env:
          DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        # 指定login命令登录hub.docker.com
        run: |
          echo "${DOCKER_PASSWORD}" | docker login --username ${DOCKER_USERNAME} --password-stdin

      - name: Build dockerfile (with push)
      # 构建镜像，然后推送到hub.docker.com
        run: |
          export fullCommit="${{ github.event.commits[0].id }}" && \
          docker build -f ./Dockerfile . -t serialt/vscode:"${fullCommit: 0: 7}"
          docker tag serialt/vscode:"${fullCommit: 0: 7} serialt/vscode:latest 
          docker push serialt/vscode:"${fullCommit: 0: 7} 
          docker push serialt/vscode:latest