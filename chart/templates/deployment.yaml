apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "vscode.fullname" . }}
  labels:
    {{- include "vscode.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "vscode.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "vscode.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "vscode.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.mirror }}/{{ .Values.image.name }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # command: ["./server"]
          # args: ["-c", "/app/config.yaml"]
          ports:
            - name: http
              containerPort: {{ .Values.service.port | default 80 }}
              protocol: TCP
          livenessProbe:
            {{- toYaml ( .Values.livenessProbe | default .Values.livenessProbe ) | nindent 12 }}
          readinessProbe:
            {{- toYaml ( .Values.readinessProbe | default .Values.livenessProbe ) | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          # volumeMounts:
          #   - name: config
          #     mountPath: "/root/.config/code-server/config.yaml"
          #     subPath: config.yaml
          #     readOnly: true
          #   - name: data-bak
          #     mountPath: "/data/bak"
          envFrom:
            - configMapRef:
                name: {{ include "vscode.fullname" . }}
      # volumes:
      #   - name: config
      #     configMap:
      #       name: {{ include "vscode.fullname" . }}
      #       items:
      #         - key: "config.yaml"
      #           path: "config.yaml"
        # - name: config
        #   configMap:
        #     name: {{ include "vscode.fullname" . }}

        # 挂载宿主机目录
        # - name: data-bak
        #   hostPath:
        #     path: /data/bak
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---